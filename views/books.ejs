
<%- include("partials/head.ejs") %>
<%- include("partials/header.ejs") %>
<h2>Books List</h2>

    <table id="books-table" class="table" style="margin: auto; vertical-align: middle;">
      <thead>
        <tr id="table-header" class="table-header">
        <th id="name-header">Book Name  </th>
        <th id="author-header">Book Author  </th>        
        <th>Book Type  </th>
        <th colspan="2"></th>
      </tr>
      </thead>
      <tbody id="books-body">
      <% if (books && books.length) { %>
        <% books.forEach((book) => { %>
          <tr>
            <td><%= book.BookName %></td>            
            <td><%= book.BookAuthor %></td>
            <td><%= book.BookType %></td>
            <td>
              <a href="/books/edit/<%= book.id %>">
                <button type="button">edit</button>
              </a>              
              </td>
            <td><form class="form-button" method="POST" action="/books/delete/<%= book.id %>">
                <button class="custom-button" type="submit">delete</button>
              </form></td>
          </tr>
        <% }) %>
      <% } %>
      </tbody>
    </table>    
    <br /> 
    <a href="/books/new"><button type="button" >Add New</button></a>
    <a href="/">
      <button type="button">Cancel</button></a>
<%- include("partials/footer.ejs") %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const headers = document.querySelectorAll('.table-header th');
    const tbody = document.getElementById('books-body');

    headers.forEach(header => {
      header.addEventListener('click', () => {
        const rows = Array.from(tbody.querySelectorAll('tr'));
        const headerId = header.id;

        // Determine sort direction (ascending or descending)
        let sortOrder = 1;
        if (header.dataset.sortOrder === 'asc') {
          sortOrder = -1;
          header.dataset.sortOrder = 'desc';
        } else {
          header.dataset.sortOrder = 'asc';
        }

        // Sort rows based on column value
        rows.sort((rowA, rowB) => {
          const cellA = rowA.querySelector(`td:nth-child(${header.cellIndex + 1})`);
          const cellB = rowB.querySelector(`td:nth-child(${header.cellIndex + 1})`);

          // Check if cells exist before accessing textContent
          const textA = cellA ? cellA.textContent.trim() : '';
          const textB = cellB ? cellB.textContent.trim() : '';

          if (textA < textB) return -1 * sortOrder;
          if (textA > textB) return 1 * sortOrder;
          return 0;
        });

        // Remove existing rows from tbody
        tbody.innerHTML = '';

        // Append sorted rows back to tbody
        rows.forEach(row => {
          tbody.appendChild(row);
        });
      });
    });
  });
</script>
